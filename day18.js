
// . -> |  if 3x|
// | -> #  if 3x#
// # -> #  # + |
//   else # -> .

let test = `.....##.|.||..##.|.#...|.##.|.#...#.|...|...#|.#..
..#|.###.....#...|#|.#.|......|#.....#|......|.|.#
#....###.#...#|.#...|##..#.#.#..#|.#....|.##.##..|
.#.....#.|.||##..||.|#....#.#.|#.....|#..|#.|#.#.#
..#.|....#......#..|...|###.....#|#.|.....##.|....
##...||.##....#...#....|||..|..|.......|.......|.#
#...|...#|...|..##||#.......#.#|....#.|.|....#.#|.
.|.......#|#||#...||#.#.##.|#|#.|..#...#..##.||.|.
|##....##||.||.#....|#.#|..#..|#|#.#.#..#.#.||#..#
..#..|.|..#.|.#..|.#.||...#.........|#.|||##....||
#|..............|....|.....#.#..|#.|#..|...|....|#
||........#.|......#.#..##||.#.##.....|.....|##.#|
...#|.|..|#.#..##...|.#..#.|#||..||..#.|...#..||.#
..#.#........#..|.#.||..#...|##...|.|#.#|.#|.|#..#
..||.|...##..|..|.||.|||....#||...|.#......#..|.#.
.||...||....|...#....|..|#...|.||..#.....|.....#.|
#..#.#....|##.|..#.#|#......##..|#...|.....|||..#.
....#|||.#...||..|#|.#..............|..||||.#|.#.|
||###|.....##|.#..|#.##..#.|.......|...#.|#.|.|...
|...##.#.||.##...|.......|#|.....|.#..#.#...||....
..#...#...|..#.||..||.#...|#.|###|.....|#.#..#.#..
........|#..|....#..#|.#|.||||.#....|.|.|.|.....|.
#...#..#.||...#|..#|#.##..#....##.#|.|#..|#.###.|#
##|#|#|.|##...##...||.|...#..##...#..#|#|#|||.||.|
||........|.|.#.#.#.|...|.#|#....#.#...|......|...
..|||........|.||..|#|##...|..#..#....|.#|.|.|...#
#|.||.#|.|....|..|.|.|.........#..|....#..#....#||
..#...#...#||#.......#.#......|...|....#|#.#....#|
......##..#.#||.|#..|....|.|||.#|.....#....|..#.|.
..|....|..|.|#...#...|.#.#..........||...###..|#.|
.#..###.#|||....##......||..|#.#..|.|..##.##.|..||
...#.....#|....#.......#.#..|...|.||..|.|#.#|....#
..|......#|..|.|.###..|..#....||..|#|..||.#|.#..#.
.|..#|..|.....||.|.##|...#.||.|.|...|#|.........|.
...|..#..#....|.....#.|.......#|......|.|#.#...#|.
.#..#..|..|#.....#.....#..|||...|.....#...||......
#.....#||...|.#|...||...|#..#|#.|.#..#|....|#..|..
..#|#....##.....|..|.#.....#|.#...#..|..#|..#..|..
.|.#.|.#..#.||#|.#.|#.#||.##..#...||#...|..#|.|..|
....#||.#..###....|.#....|.#.|.|.|..#.|....#.#..|#
##.#.|.###.|#.#..|....#|.||...#|...#..|......#|.#.
|.##.#....#|#..|.|#.#.#..|.#..##|......##....|....
..##.#|......#.....#....|....|.....||.#...#..|||##
....|.|#.......|..##|||#...##.#.#..#|....#|..|....
|.#..||...||......#..#.||.|#.....####|....##....|#
..||.......||.....|...###.#.|...##.|.|#|......||..
#.|..|#.#...|..||.#.....|#|#.|.|.#.|.#|..|#.|#.##.
||###|#..|.|..#...######.|##..#.|...|..|#..||..|..
..|.|.|..##..#....|||..#.||.|#......|#||#...#....#
..#...#..||...#|.|#...|#|.|..##|....#....#.||.#|#.
`

// let test = `.#.#...|#.
// .....#|##|
// .|..|...#.
// ..|#.....#
// #.#|||#|#|
// ...#.||...
// .|....|...
// ||...#|.#|
// |.||||..|.
// ...#.|..|.
// `

const grid = 50

function get(x,y) {
  if (x >= 0 && y >= 0 && x < grid+1 && y < grid)
    return test[y*(grid + 1) + x]
  else
    return ''
}

// console.log('|',get(8,0))
// console.log('#',get(2,49))
// console.log('.',get(8,2))

function trees(seen) {
  let found = seen.match(/([|])/mg)
  if (found) 
    return found.length
  else
    return 0
}

function lumber(seen) {
  let found = seen.match(/([#])/mg)
  if (found) 
    return found.length
  else
    return 0
}

function walkAround(x,y,see) {
  let seen = ''
  seen += get(x-1, y-1)
  seen += get(x, y-1) 
  seen += get(x+1, y-1)
  seen += get(x-1, y)
  seen += get(x+1, y)
  seen += get(x-1, y+ 1)
  seen += get(x , y+1)
  seen += get(x+1, y+ 1)
  // if (x == 4 && y == 4)
  //   console.log('seen: ',seen)
  return see(seen)
}

function changeAcre(x,y) {
  let current = get(x,y)
  // console.log('Evaluating: ', current, ' @ ',x,y)
  switch (current) {
    case '.':
      if (walkAround(x,y,trees) >= 3)
        return '|'
      else
        return '.'
    case '|':
      if (walkAround(x,y,lumber) >= 3)
        return '#'
      else 
        return '|'
    case '#':
      if (walkAround(x,y,trees) >= 1 && walkAround(x,y,lumber) >= 1)
        return '#'
      else
        return '.'
    default:
      return current;
  }
}

function changeAll (size) {
  let changed = ''
  for (let y = 0; y < size; y++)
    for (let x = 0; x <= size; x++) {
      changed += changeAcre(x, y)
      // console.log(changed)
    }
  return changed;
}

// ramp up period
for (let minutes = 1; minutes <= 1000; minutes ++) {
  console.log(test = changeAll(grid))
  test = changeAll(grid)
  
}
console.log('First 1000')

let states = {}
for (let minutes = 1001; minutes <= 10000; minutes ++) {
  // console.log(test = changeAll(grid))
  test = changeAll(grid)

  let state = trees(test) * lumber(test)
  if (states[state]) {
    states[state].push(minutes%28)
    states[state].push(minutes)  
    if (states[state].length > 60)
      states[state].shift()
  } else {
    states[state] = [minutes]
  }
}

console.log(states)

// console.log(trees(test), lumber(test))